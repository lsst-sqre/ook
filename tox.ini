[tox]
envlist = py,coverage-report,typing,lint
isolated_build = True

[testenv]
description = Run pytest against {envname}.
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
allowlist_externals =
    docker-compose
setenv =
    SAFIR_KAFKA_BROKER_URL=localhost:9092
    SAFIR_SCHEMA_REGISTRY_URL=http://localhost:8081
commands =
    docker-compose up -d
    holdup http://localhost:8081/subjects -t 60 -T 5 -i 1 -n --insecure
    coverage run -m pytest {posargs}
    docker-compose down

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py
commands =
    coverage combine
    coverage report

[testenv:typing]
description = Run mypy.
commands =
    mypy src/ook tests setup.py

[testenv:lint]
description = Lint codebase by running pre-commit (Black, isort, Flake8).
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:run]
description = Run the development server with auto-reload for code changes.
usedevelop = true
allowlist_externals =
    docker-compose
setenv =
    SAFIR_KAFKA_BROKER_URL=localhost:9092
    SAFIR_SCHEMA_REGISTRY_URL=http://localhost:8081
    ENABLE_LTD_EVENTS_KAFKA_TOPIC=true
    ENABLE_OOK_INGEST_KAFKA_TOPIC=true
    SAFIR_LOG_LEVEL=DEBUG
passenv =
    ALGOLIA_APP_ID
    ALGOLIA_API_KEY
    ALGOLIA_DOCUMENT_INDEX
commands =
    docker-compose up -d
    holdup http://localhost:8081/subjects -t 60 -T 5 -i 1 -n --insecure
    adev runserver -p 8100 --app-factory create_app src/ook/app.py
    docker-compose down
